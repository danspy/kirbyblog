@mixin box-sizing($type:border-box) {
	-webkit-box-sizing: $type;
	   -moz-box-sizing: $type;
	        box-sizing: $type;
}

@mixin transition($transition-property, $transition-time, $transition-method) {
	-webkit-transition: $transition-property $transition-time $transition-method;
	   -moz-transition: $transition-property $transition-time $transition-method;
	     -o-transition: $transition-property $transition-time $transition-method;
	        transition: $transition-property $transition-time $transition-method;
}

@mixin linkColor($color) {
     color: $color;
     
     &:hover {
         color: color(dark);
     }
}

// breakpoints with IE Fallback
@mixin breakpoint($mq-width, $ratio: 'min') {
  @if $compile-IE {
    .lt-ie9 & { @content; }    
  }
  @else {
    @if map-has-key($mq, $mq-width) {
      @if $ratio == 'min' {
        @media screen and (min-width: #{map-get($mq, $mq-width)}) {
          @content;
        }
      } 
      @else if $ratio == 'max' {
        @media screen and (max-width: #{map-get($mq, $mq-width)}) {
          @content;
        }
      }
    }
  }
}

// retina images incl. fallback
@mixin retina($file, $type, $width, $height) {
  background-image: url('../images/' + $file + '.' + $type);
 
  @media (-webkit-min-device-pixel-ratio: 2), (-moz-min-device-pixel-ratio: 2) {
    & {
      background-image: url('../images/' + $file + '@2x.' + $type);
      -webkit-background-size: $width $height;
      -moz-background-size: $width $height;
      background-size: $width $height;
    }
  }
}

// valign
@mixin valign {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

// clearfix
@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}